generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Employee {
  id Int @id @default(autoincrement())
  username String @unique
  role_id Int
  role UserRole @relation(fields: [role_id], references: [id], onDelete: Cascade)
  first_name String @default("")
  last_name String @default("")
  password String
  employee_no String @default("")
  department  Department @relation(fields: [department_id], references: [id], onDelete: Cascade)
  department_id Int @default(1)
  cost_code String @default("")
  company     Company    @relation(fields: [company_id], references: [id], onDelete: Cascade)
  company_id   Int @default(1)
  date_hired DateTime @default(now())
  effective_on DateTime @default("2099-12-01T00:00:00Z")
  modified_on DateTime @updatedAt
  modified_by_id  Int? @default(1)       // Foreign key to Employee.id
  modified_by     Employee?  @relation("EmployeeModifiedBy", fields: [modified_by_id], references: [id])
  modified_employees Employee[] @relation("EmployeeModifiedBy")
  modified_departments Department[] @relation("DepartmentModifiedBy")
  modified_companies Company[] @relation("CompanyModifiedBy")
  modified_suppliers Supplier[] @relation("SupplierModifiedBy")
  modified_suppliers_contact Supplier_Contact_Details[] @relation("SupplierContactModifiedBy")
  modified_suppliers_status Supplier_Status[] @relation("SupplierStatusModifiedBy")
  modified_user_roles UserRole[] @relation("UserRoleModifiedBy")
}

model UserRole {
  id          Int       @id @default(autoincrement())
  name        String
  employees  Employee[]
  effective_on DateTime @default("2099-12-01T00:00:00Z")
  modified_on DateTime @updatedAt
  modified_by_id Int? 
  modified_by Employee? @relation("UserRoleModifiedBy", fields: [modified_by_id], references: [id], onDelete: Cascade)
}

model Department {
  id         Int       @id @default(autoincrement())
  name       String
  employees  Employee[]
  effective_on DateTime @default("2099-12-01T00:00:00Z")
  modified_on DateTime @updatedAt
  modified_by_id Int?  @default(1)
  modified_by Employee? @relation("DepartmentModifiedBy", fields: [modified_by_id], references: [id], onDelete: Cascade)
}

model Company {
  id         Int       @id @default(autoincrement())
  name       String
  employees  Employee[]
  suppliers Supplier[]
  effective_on DateTime @default("2099-12-01T00:00:00Z")
  modified_on DateTime @updatedAt
  modified_by_id Int? @default(1)
  modified_by    Employee? @relation("CompanyModifiedBy", fields: [modified_by_id], references: [id], onDelete: Cascade)
}

model Supplier {
  id              Int             @id @default(autoincrement())
  supplier_code   String
  company         Company         @relation(fields: [company_id], references: [id], onDelete: Cascade)
  company_id      Int
  address         String
  contract_term   String
  tin_number      String
  status_id     Int
  status          Supplier_Status  @relation(fields: [status_id], references: [id], onDelete: Cascade)
  contact_id Int
  contact_details Supplier_Contact_Details @relation(fields: [contact_id], references: [id], onDelete: Cascade)
  effective_on DateTime @default("2099-12-01T00:00:00Z")
  modified_on DateTime @updatedAt
  modified_by_id Int?      // Foreign key to Employee.id
  modified_by Employee? @relation("SupplierModifiedBy", fields: [modified_by_id], references: [id], onDelete: Cascade)
}

model Supplier_Contact_Details {
  id              Int             @id @default(autoincrement())
  contact_person String
  business_tel String
  email_address String
  telefax_number String
  zip_code String
  mobile_number String
  city_town String
  province String
  remarks String
  suppliers Supplier[] @relation
  effective_on DateTime @default("2099-12-01T00:00:00Z")
  modified_on DateTime @updatedAt
  modified_by_id Int?      // Foreign key to Employee.id
  modified_by Employee? @relation("SupplierContactModifiedBy", fields: [modified_by_id], references: [id], onDelete: Cascade)
}

model Supplier_Status {
  id              Int             @id @default(autoincrement())
  description     String
  suppliers       Supplier[]      @relation
  effective_on DateTime @default("2099-12-01T00:00:00Z")
  modified_on DateTime @updatedAt
  modified_by_id Int?      // Foreign key to Employee.id
  modified_by Employee? @relation("SupplierStatusModifiedBy", fields: [modified_by_id], references: [id], onDelete: Cascade)
}
